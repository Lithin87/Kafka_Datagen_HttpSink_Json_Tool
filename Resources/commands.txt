confluent connect cluster create --config-file datagen-source-config.json

confluent connect cluster list

confluent connect plugin describe DatagenSource -o json

confluent kafka topic delete transactions

confluent connect delete <connector ID>

confluent connect describe <connector ID>

confluent connect resume <connector ID>

confluent connect pause <connector ID>

=================================================================================
sleep 60
docker exec -it connect bash   
apt install -y default-jdk     done
curl "https://client.hub.confluent.io/confluent-hub-client-latest.tar.gz" -o hub
tar -xzvf hub
cd bin
y | confluent-hub install confluentinc/kafka-connect-http:1.7.2
exit
docker restart connect

  chmod +x /usr/local/bin/docker-compose
  cd bin && ./confluent-hub
  #chmod +x confluent-hub
 


/etc/kafka/connect-distributed.properties
./confluent-hub install confluentinc/kafka-connect-http:latest --component-dir <path-to-component-directory> --worker-configs <path-to-worker-configs-file>
usr/share/confluent-hub-components
etc/kafka-connect/kafka-connect.properties
lithin87/ust_sink_connector


value.converter=org.apache.kafka.connect.json.JsonConverter
              

{
  "name": "HttpSinkConnectorConnector_0",
  "config": {
    "value.converter.schema.registry.url": "http://schema-registry:8081",
    "name": "HttpSinkConnectorConnector_0",
    "connector.class": "io.confluent.connect.http.HttpSinkConnector",
    "key.converter": "org.apache.kafka.connect.storage.StringConverter",
    "value.converter": "io.confluent.connect.avro.AvroConverter",
    "topics": "Regex_Schema",
    "http.api.url": "https://kafkasinkcollector-tava5544oa-uc.a.run.app",
    "request.method": "post",
    "reporter.result.topic.replication.factor": "1",
    "reporter.error.topic.replication.factor": "1",
    "reporter.bootstrap.servers": "broker:29092"
  }
}

const machineImage = 'projects/ecstatic-cosmos-387220/global/machineImages/kafka-datagen-connect-image'; 

   instanceResource: {
      name: instanceName,
      sourceMachineImage: machineImage,
      metadata: {
        items: [
          {
            key: 'startup-script',
            value: `
              #!/bin/bash
              git clone https://github.com/Lithin87/Kafka_Datagen_HttpSink_Json_Tool.git /home/ravindcable5/app
              cd /home/ravindcable5/app/Resources && docker-compose start `,
          },
        ],
      },
    },

    instanceResource: {
      name: instanceName,
      disks: [
        {
          initializeParams: {
            diskSizeGb: '15',
            sourceImage,
          },
          autoDelete: true,
          boot: true,
          type: 'pd-ssd',
        },
      ],
      machineType: `zones/${zone}/machineTypes/${machineType}`,
      networkInterfaces: [
        {
          network: 'global/networks/default',
          accessConfigs: [
            {
              name: 'External NAT',
              type: 'ONE_TO_ONE_NAT'
            }
          ],
          tags: ['http-server', 'https-server'],
        }
      ],
      metadata: {
        items: [
          {
            key: 'startup-script',
            value: `
              #!/bin/bash
              apt install -y docker.io
              curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              chmod +x /usr/local/bin/docker-compose
              git clone https://github.com/Lithin87/Kafka_Datagen_HttpSink_Json_Tool.git /home/ravindcable6/app
              cd /home/ravindcable6/app/Resources && docker-compose up -d
            `,
          },
        ],
      },
    },

    
sudo docker pull confluentinc/cp-kafka-rest:7.3.3
sudo docker pull confluentinc/ksqldb-examples:7.3.3
sudo docker pull confluentinc/cp-ksqldb-cli:7.3.3
sudo docker pull confluentinc/cp-ksqldb-server:7.3.3
sudo docker pull confluentinc/cp-enterprise-control-center:7.3.3
sudo docker pull lithin87/sink-connect
sudo docker pull confluentinc/cp-schema-registry:7.3.3
sudo docker pull confluentinc/cp-server:7.3.3
sudo docker pull confluentinc/cp-zookeeper:7.3.3




================================================================================
    { "schema" : 
    {
     "connect": "lithin",
     "fields": "hiiii"
    }}
    
====================================================================================================
     { "schema" : 
   
{
  "connect.name": "lithin.personal.ust_data",
  "fields": [
    {
      "name": "boots_id",
      "type": "int"
    },
    {
      "name": "delhi_lines",
      "type": {
        "items": {
          "connect.name": "lithin.personal.order_line",
          "fields": [
            {
              "name": "product_id",
              "type": "int"
            },
            {
              "name": "category",
              "type": "string"
            },
            {
              "name": "quantity",
              "type": "int"
            },
            {
              "name": "unit_price",
              "type": "float"
            },
            {
              "name": "net_price",
              "type": "float"
            }
          ],
          "name": "order_line",
          "type": "record"
        },
        "type": "array"
      }
    }
  ],
  "name": "ust_data",
  "namespace": "lithin.personal",
  "type": "record"
}

}

===========================================================================================   
{
   "data": "pls give a  sample json message with first key named as name, age, address, car"
}

// http://34.133.7.160:8082/v3/clusters/MnChXrKqS3CQZ0Ay6vRjMw/topics/HttpSinkConnectorConnector_0-error